{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst btn = document.querySelector('[data-start]');\nconst daySpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minSpan = document.querySelector('[data-minutes]');\nconst secSpan = document.querySelector('[data-seconds]');\n\nbtn.addEventListener('click', startTimer);\n\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      btn.disabled = true;\n      return iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    }\n    userSelectedDate = selectedDates[0];\n\n    btn.disabled = false;\n  },\n};\n\nflatpickr(input, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nlet timer = null;\n\nfunction updateTimer() {\n  const currentDate = new Date();\n  const dif = userSelectedDate - currentDate;\n  console.log(convertMs(dif));\n  if (dif > 0) {\n    btn.disabled = true;\n    const { days, hours, minutes, seconds } = convertMs(dif);\n    daySpan.textContent = String(days).padStart(2, 0);\n    hoursSpan.textContent = String(hours).padStart(2, 0);\n    minSpan.textContent = String(minutes).padStart(2, 0);\n    secSpan.textContent = String(seconds).padStart(2, 0);\n  } else {\n    btn.disabled = false;\n    clearInterval(timer);\n  }\n}\n\nfunction startTimer() {\n  timer = setInterval(updateTimer, 1000);\n}\n"],"names":["input","btn","daySpan","hoursSpan","minSpan","secSpan","startTimer","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","timer","updateTimer","dif"],"mappings":"2GAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAM,SAAS,cAAc,cAAc,EAC3CC,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEvDJ,EAAI,iBAAiB,QAASK,CAAU,EAExC,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,GAAK,IAAI,KAC1B,OAAAR,EAAI,SAAW,GACRS,EAAS,MAAM,CACpB,QAAS,qCACT,SAAU,UAClB,CAAO,EAEHH,EAAmBE,EAAc,CAAC,EAElCR,EAAI,SAAW,EAChB,CACH,EAEAU,EAAUX,EAAOQ,CAAO,EAExB,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,IAAIC,EAAQ,KAEZ,SAASC,GAAc,CAErB,MAAMC,EAAMb,EADQ,IAAI,KAGxB,GADA,QAAQ,IAAIK,EAAUQ,CAAG,CAAC,EACtBA,EAAM,EAAG,CACXnB,EAAI,SAAW,GACf,KAAM,CAAE,KAAAa,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUQ,CAAG,EACvDlB,EAAQ,YAAc,OAAOY,CAAI,EAAE,SAAS,EAAG,CAAC,EAChDX,EAAU,YAAc,OAAOY,CAAK,EAAE,SAAS,EAAG,CAAC,EACnDX,EAAQ,YAAc,OAAOY,CAAO,EAAE,SAAS,EAAG,CAAC,EACnDX,EAAQ,YAAc,OAAOY,CAAO,EAAE,SAAS,EAAG,CAAC,CACvD,MACIhB,EAAI,SAAW,GACf,cAAciB,CAAK,CAEvB,CAEA,SAASZ,GAAa,CACpBY,EAAQ,YAAYC,EAAa,GAAI,CACvC"}